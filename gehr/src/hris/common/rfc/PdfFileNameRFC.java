package hris.common.rfc ;import java.util.* ;import com.sap.mw.jco.* ;import com.sns.jdf.* ;import com.sns.jdf.sap.* ;/** * PdfParseRFC.java * 연말정산 - 국세청 PDF 파일명 저장 RFC를 호출하는 Class * * @author 손혜영 * @version 1.0, 2013/07/01 */public class PdfFileNameRFC extends SAPWrap {    private static String functionName = "ZSOLYR_RFC_PDF_FILE_NAME" ;    /**     * 연말정산 - 국세청 PDF 파일명 저장 RFC 호출하는 Method     * @return java.util.Vector     * @exception com.sns.jdf.GeneralException     */    public void build( String empNo, String targetYear, Vector vec) throws GeneralException {        JCO.Client mConnection = null;        try{            mConnection = getClient();            JCO.Function function = createFunction(functionName) ;            setInput(function, empNo, targetYear, "5");	//저장            setInput(function, vec, "T_RECORD");            excute(mConnection, function);        } catch(Exception ex){            Logger.sap.println(this, "SAPException : "+ex.toString());            //Logger.error(e);            throw new GeneralException(ex);        } finally {            close(mConnection);        }    }    /**     * RFC 실행전에 Import 값을 setting 한다.     * com.sns.jdf.SAPWrap.excute(JCO.Client mConnection, JCO.Function function) 가 호출되기 전에 실행되어야하는 메소드     * @param function com.sap.mw.jco.JCO.Function     * @exception com.sns.jdf.GeneralException     */    private void setInput(JCO.Function function, String empNo, String targetYear, String contType) throws GeneralException {        String fieldName1 = "I_PERNR";        setField( function, fieldName1, empNo );        String fieldName2 = "I_YEAR";        setField( function, fieldName2, targetYear );        String fieldName3 = "I_CONT_TYPE";        setField( function, fieldName3, contType);    }    /**     * RFC 실행전에 Import 값을 setting 한다.     * com.sns.jdf.SAPWrap.excute(JCO.Client mConnection, JCO.Function function) 가 호출되기 전에 실행되어야하는 메소드     * @param function com.sap.mw.jco.JCO.Function     * @param entityVector java.util.Vector     * @exception com.sns.jdf.GeneralException     */    private void setInput(JCO.Function function, Vector entityVector, String tableName) throws GeneralException {        setTable(function, tableName, entityVector);    }    /**     * RFC 실행후 Export 값을 Vector 로 Return 한다.     * 반드시 com.sns.jdf.SAPWrap.excute(JCO.Client mConnection, JCO.Function function) 가 호출된후에 실행되어야하는 메소드     * @param function com.sap.mw.jco.JCO.Function     * @return java.util.Vector     * @exception com.sns.jdf.GeneralException     */    private Vector getOutput(JCO.Function function) throws GeneralException {        String entityName = "hris.common.PdfParseData";        String tableName  = "T_RECORD";        return getTable(entityName, function, tableName);    }}