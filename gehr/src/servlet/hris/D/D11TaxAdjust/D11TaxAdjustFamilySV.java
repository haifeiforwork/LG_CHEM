package servlet.hris.D.D11TaxAdjust;import java.sql.*;import java.util.Vector;import javax.servlet.*;import javax.servlet.http.*;import com.sns.jdf.*;import com.sns.jdf.db.*;import com.sns.jdf.util.*;import com.sns.jdf.servlet.*;import hris.common.*;import hris.common.util.*;import hris.common.db.*;import hris.common.rfc.*;import hris.D.D11TaxAdjust.*;import hris.D.D11TaxAdjust.rfc.*;/** * D11TaxAdjustFamilySV.java * 연말정산 - 부양가족공제를 조회할 수 있도록 하는 Class * * @author lsa * @version 1.0, 2005/11/24 */public class D11TaxAdjustFamilySV extends EHRBaseServlet {    protected void performTask(HttpServletRequest req, HttpServletResponse res) throws GeneralException {        try{        	//ApLog        	String ctrl = "";        	String cnt = "0";        	String[] val = null;            HttpSession session = req.getSession(false);            WebUserData user    = (WebUserData)session.getAttribute("user");            Box         box     = WebUtil.getBox(req);            D11TaxAdjustFamilyRFC    rfc   = new D11TaxAdjustFamilyRFC();            D11TaxAdjustYearCheckRFC rfc_o = new D11TaxAdjustYearCheckRFC();            D11TaxAdjustHouseHoleCheckRFC   rfcHS      = new D11TaxAdjustHouseHoleCheckRFC();            D11TaxAdjustConfirmRFC rfcCf = new D11TaxAdjustConfirmRFC();                        Vector family_vt  = new Vector();            String jobid      = "";            String dest       = "";            String targetYear = box.get("targetYear");            String o_flag     = "";            if( targetYear.equals("") ){                targetYear = ((TaxAdjustFlagData)session.getAttribute("taxAdjust")).targetYear;            }            jobid = box.get("jobid");            if( jobid.equals("") ){                jobid = "first";            }            if( jobid.equals("first") ){            	// 2002.12.04. 연말정산 확정여부 조회                o_flag = rfc_o.getO_FLAG( user.empNo, targetYear );                // 부양가족공제 조회 - 생성, 수정할 정보가 아니다.                family_vt = rfc.getFamily( user.empNo, targetYear ,"1");                //Logger.debug.println("first  family_vt=========="+family_vt.toString() );                dest = WebUtil.JspURL+"D/D11TaxAdjust/D11TaxAdjustFamily.jsp";                req.setAttribute( "targetYear", targetYear );                req.setAttribute( "family_vt" , family_vt  );                req.setAttribute( "o_flag"    , o_flag     );                //ApLog                ctrl = "12";            } else if ( jobid.equals("build") ){                int rowCount = box.getInt("rowCount");                for( int i = 0 ; i < rowCount ; i++ ) {                    D11TaxAdjustFamilyData data = new D11TaxAdjustFamilyData();                    String idx = Integer.toString(i);                                           data.WORK_YEAR = box.get("WORK_YEAR"+idx);  //연말정산 연도                    data.BEGDA     = box.get("BEGDA"+idx);      //시작일                           data.ENDDA     = box.get("ENDDA"+idx);      //종료일                           data.PERNR     = box.get("PERNR"+idx);      //사원번호                         data.SEQNR     = box.get("SEQNR"+idx);      //순번                      data.FAMI_RLAT = box.get("FAMI_RLAT"+idx);  //관계                             data.FAMI_RLNM = box.get("FAMI_RLNM"+idx);  //관계 명칭                        data.FAMI_OBJP = box.get("FAMI_OBJP"+idx);  //관계의 순번                      data.FAMI_NAME = box.get("FAMI_NAME"+idx);  //이름                             data.FAMI_REGN = box.get("FAMI_REGN"+idx);  //주민등록번호                     data.FAMI_F001 = box.get("FAMI_F001"+idx);  //보험료                           data.FAMI_F002 = box.get("FAMI_F002"+idx);  //의료비                           data.FAMI_F003 = box.get("FAMI_F003"+idx);  //교육비                           data.FAMI_F004 = box.get("FAMI_F004"+idx);  //신용카드등                                                            data.E_GUBUN   = box.get("E_GUBUN"+idx);   // 구분                           data.INSUR     = box.get("INSUR"+idx)  ;   // 보험료                         data.MEDIC     = box.get("MEDIC"+idx)  ;   // 의료비                         data.EDUCA     = box.get("EDUCA"+idx)  ;   // 교육비                         data.CREDIT    = box.get("CREDIT"+idx) ;   // 신용카드                       data.CASHR     = box.get("CASHR"+idx)  ;   // 현금영수증                     data.GIBU      = box.get("GIBU"+idx)   ;   // 기부금                                             data.INSUR     = Double.toString(Double.parseDouble(data.INSUR )/100 );                    data.MEDIC     = Double.toString(Double.parseDouble(data.MEDIC )/100 );                    data.EDUCA     = Double.toString(Double.parseDouble(data.EDUCA )/100 );                    data.CREDIT    = Double.toString(Double.parseDouble(data.CREDIT)/100 );                    data.CASHR     = Double.toString(Double.parseDouble(data.CASHR )/100 );                    data.GIBU       = Double.toString(Double.parseDouble(data.GIBU  )/100 );                    data.DEBIT      = Double.toString(Double.parseDouble(data.DEBIT  )/100 );                                                    family_vt.addElement(data);                }                Logger.debug.println("build  family_vt=========="+family_vt.toString() );                rfc.build( user.empNo, targetYear, family_vt );                String FSTID     = box.get("FSTID")      ;    //세대주체크여부                rfcHS.build(user.empNo,targetYear,targetYear+"0101",targetYear+"1231",FSTID);                                String msg = "msg002";                String url = "location.href = '" + WebUtil.ServletURL+"hris.D.D11TaxAdjust.D11TaxAdjustFamilySV?targetYear="+targetYear+"';";                req.setAttribute("msg", msg);                req.setAttribute("url", url);                dest = WebUtil.JspURL+"common/msg.jsp";            } else if ( jobid.equals("confirm") ){            	                String return_fg = rfcCf.setConfirm(user.empNo, targetYear);                String msg = "";                if("S".equals(return_fg)){                	msg = "msg012";	//확정메세지 추가 : 확정 처리되었습니다.                } else {                	msg = "msg014";	//확정메세지 추가 : 확정 실패입니다. //@2014 연말정산 문구 수정 "부서구분 번호가 없습니다."                }                String url = "location.href = '" + WebUtil.ServletURL+"hris.D.D11TaxAdjust.D11TaxAdjustFamilySV?targetYear="+targetYear+"';";                req.setAttribute("msg", msg);                req.setAttribute("url", url);                dest = WebUtil.JspURL+"common/msg.jsp";                val = new String[2];                val[0] = user.empNo;                val[1] = targetYear;                //ApLog                                ctrl = "11";                cnt = "1";            }                        Logger.debug.println(this, " destributed = " + dest);            //ApLog 생성            ApLoggerWriter.writeApLog("연말정산", "신청현황조회", "D11TaxAdjustFamilySV", "신청현황조회", ctrl, cnt, val, user, req.getRemoteAddr());             printJspPage(req, res, dest);                                } catch(Exception e) {        	//Logger.error(e);            throw new GeneralException(e);        }	}}