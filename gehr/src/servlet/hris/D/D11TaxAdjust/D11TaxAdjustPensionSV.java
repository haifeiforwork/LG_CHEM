package servlet.hris.D.D11TaxAdjust;import java.sql.*;import java.util.Vector;import javax.servlet.*;import javax.servlet.http.*;import com.sns.jdf.*;import com.sns.jdf.db.*;import com.sns.jdf.util.*;import com.sns.jdf.servlet.*;import hris.common.*;import hris.common.util.*;import hris.common.db.*;import hris.common.rfc.*;import hris.D.D11TaxAdjust.*;import hris.D.D11TaxAdjust.rfc.*;/** * D11TaxAdjustPensionSV.java * 연말정산 - 연금/저축공제  를 신청/수정/조회할 수 있도록 하는 Class * * @author lsa * @version 1.0, 2010/12/08 */public class D11TaxAdjustPensionSV extends EHRBaseServlet {    protected void performTask(HttpServletRequest req, HttpServletResponse res) throws GeneralException {        try{        	//ApLog        	String ctrl = "";        	String cnt = "0";        	String[] val = null;            HttpSession              session    = req.getSession(false);            WebUserData              user       = (WebUserData)session.getAttribute("user");            Box                      box        = WebUtil.getBox(req);            D11TaxAdjustPensionRFC       rfc        = new D11TaxAdjustPensionRFC();            D11TaxAdjustYearCheckRFC rfc_o      = new D11TaxAdjustYearCheckRFC();            D11TaxAdjustHouseHoleCheckRFC   rfcHS      = new D11TaxAdjustHouseHoleCheckRFC();            Vector                   pension_vt     = new Vector();            String                   dest       = "";            String                   jobid      = "";            String                   targetYear = box.get("targetYear");            String                   o_flag     = "";            if( targetYear.equals("") ){                targetYear = ((TaxAdjustFlagData)session.getAttribute("taxAdjust")).targetYear;            }            jobid = box.get("jobid");            if( jobid.equals("") ){                jobid = "first";            }            if(jobid.equals("first")){            	pension_vt   = rfc.getPension( user.empNo, targetYear );                Vector ret_vt = new Vector();            	D11TaxAdjustHouseHoleRequiredRFC       HouseHolerfc        = new D11TaxAdjustHouseHoleRequiredRFC();                Vector pensionCode_vt = new Vector();                D11TaxAdjustPensionCodeRFC       PCoderfc        = new D11TaxAdjustPensionCodeRFC();                for( int i = 0 ; i < pension_vt.size() ; i++ ){                	D11TaxAdjustPensionData data = (D11TaxAdjustPensionData)pension_vt.get(i);                	data.REQ_H=HouseHolerfc.getReqH("","",targetYear+"0101",data.SUBTY,data.PNSTY);                	pensionCode_vt = PCoderfc.getPensionGubn(targetYear,"2",data.SUBTY);                	for( int j = 0 ; j < pensionCode_vt.size() ; j++ ){                		D11TaxAdjustPensionCodeData dataC = (D11TaxAdjustPensionCodeData)pensionCode_vt.get(j);                		if (data.PNSTY.equals(dataC.GOJE_CODE)) {                			data.PREIN_FLAG  = dataC.PREIN_FLAG;//종(전)근무지필수 체크                			data.FINCO_FLAG  = dataC.FINCO_FLAG;//금융기관코드필수 체크                			data.ACCNO_FLAG = dataC.ACCNO_FLAG;//계좌번호필수 체크                		}                	}                	ret_vt.addElement(data);                }                //2002.12.04. 연말정산 확정여부 조회                o_flag = rfc_o.getO_FLAG( user.empNo, targetYear );                if( pension_vt.size() >0 ) {          // 조회                    dest = WebUtil.JspURL+"D/D11TaxAdjust/D11TaxAdjustPensionDetail.jsp";                } else {                          // 신규                    dest = WebUtil.JspURL+"D/D11TaxAdjust/D11TaxAdjustPensionBuild.jsp";                }                req.setAttribute( "targetYear", targetYear );                req.setAttribute( "pension_vt"    , ret_vt     );                req.setAttribute( "rowCount"  , "8"        );                req.setAttribute( "o_flag"    , o_flag     );                //ApLog                ctrl = "12";            } else  if(jobid.equals("build")){                int pension_count = box.getInt("pension_count");                for( int i = 0 ; i < pension_count ; i++ ) {                	D11TaxAdjustPensionData data = new D11TaxAdjustPensionData();                    String          idx             = Integer.toString(i);                    data.PNSTY        = box.get("PNSTY_"+idx);   // 유형                    if ( data.PNSTY.equals("") || data.PNSTY.equals(" ") ) {                        continue;                    }                    data.PERNR         = user.empNo;   // 사원 번호                    data.WORK_YEAR = targetYear;                    data.SUBTY        = box.get("SUBTY_"+idx);   // 유형                    data.FINCO        = box.get("FINCO_"+idx);   // 금융기관코드                    data.INSNM        = box.get("INSNM_"+idx);   // 금융사명                    data.RCBEG        = box.get("RCBEG_"+idx);   // 가입일 @2015 연말정산 추가                    data.ACCNO       = box.get("ACCNO_"+idx);   // 계좌번호                    data.NAM01       = box.get("NAM01_"+idx);   //    금액                    data.PREIN         = box.get("PREIN_"+idx);   // 종전근무지                    data.REQ_H         = box.get("REQ_H_"+idx);   // 세대주필수체크                    data.PREIN_FLAG      = box.get("PREIN_FLAG_"+idx);   //종(전)근무지필수 체크                    data.FINCO_FLAG     = box.get("FINCO_FLAG_"+idx);   // 금융기관코드필수 체크                    data.ACCNO_FLAG    = box.get("ACCNO_FLAG_"+idx);   //계좌번호필수 체크                    data.OMIT_FLAG    = box.get("OMIT_FLAG"+idx); //삭제 플래그                    data.PDF_FLAG    = box.get("PDF_FLAG"+idx); //PDF 플래그                    pension_vt.addElement(data);                    //ApLog                    if(i==0){                    	val = new String[16];	                    val[0] = data.PNSTY;	                    val[1] = data.PERNR;	                    val[2] = data.WORK_YEAR;	                    val[3] = data.SUBTY;	                    val[4] = data.FINCO;	                    val[5] = data.INSNM;	                    val[6] = data.ACCNO;	                    val[7] = data.NAM01;	                    val[8] = data.PREIN;	                    val[9] = data.REQ_H;	                    val[10] = data.PREIN_FLAG;	                    val[11] = data.FINCO_FLAG;	                    val[12] = data.ACCNO_FLAG;	                    val[13] = data.OMIT_FLAG;	                    val[14] = data.PDF_FLAG;	                    val[15] = data.RCBEG;//@2015 연말정산 추가                    }                }                rfc.change( user.empNo, targetYear, pension_vt );                String FSTID     = box.get("FSTID")      ;    //세대주체크여부                rfcHS.build(user.empNo,targetYear,targetYear+"0101",targetYear+"1231",FSTID);                String msg = "msg007";                String url = "location.href = '" + WebUtil.ServletURL+"hris.D.D11TaxAdjust.D11TaxAdjustPensionSV?targetYear="+targetYear+"';";                req.setAttribute("msg", msg);                req.setAttribute("url", url);                dest = WebUtil.JspURL+"common/msg.jsp";                //ApLog                ctrl = "11";                cnt = String.valueOf(pension_vt.size());            } else  if(jobid.equals("change_first")){            	pension_vt   = rfc.getPension( user.empNo, targetYear );                Vector ret_vt = new Vector();            	D11TaxAdjustHouseHoleRequiredRFC       HouseHolerfc        = new D11TaxAdjustHouseHoleRequiredRFC();                Vector pensionCode_vt = new Vector();                D11TaxAdjustPensionCodeRFC       PCoderfc        = new D11TaxAdjustPensionCodeRFC();                for( int i = 0 ; i < pension_vt.size() ; i++ ){                	D11TaxAdjustPensionData data = (D11TaxAdjustPensionData)pension_vt.get(i);                	data.REQ_H=HouseHolerfc.getReqH("","",targetYear+"0101",data.SUBTY,data.PNSTY);                	pensionCode_vt = PCoderfc.getPensionGubn(targetYear,"2",data.SUBTY);                	for( int j = 0 ; j < pensionCode_vt.size() ; j++ ){                		D11TaxAdjustPensionCodeData dataC = (D11TaxAdjustPensionCodeData)pensionCode_vt.get(j);                		if (data.PNSTY.equals(dataC.GOJE_CODE)) {                			data.PREIN_FLAG  = dataC.PREIN_FLAG;//종(전)근무지필수 체크                			data.FINCO_FLAG  = dataC.FINCO_FLAG;//금융기관코드필수 체크                			data.ACCNO_FLAG = dataC.ACCNO_FLAG;//계좌번호필수 체크                		}                	}                	ret_vt.addElement(data);                }                //2002.12.04. 연말정산 확정여부 조회                o_flag = rfc_o.getO_FLAG( user.empNo, targetYear );                dest = WebUtil.JspURL+"D/D11TaxAdjust/D11TaxAdjustPensionChange.jsp";                req.setAttribute( "targetYear", targetYear );                req.setAttribute( "pension_vt"    , ret_vt     );                req.setAttribute( "rowCount"  , "8"        );                req.setAttribute( "o_flag"    , o_flag     );                //ApLog                ctrl = "12";            } else if(jobid.equals("change")){                int pension_count = box.getInt("pension_count");                for( int i = 0 ; i < pension_count ; i++ ) {                    D11TaxAdjustPensionData data = new D11TaxAdjustPensionData();                    String          idx             = Integer.toString(i);                    data.PNSTY        = box.get("PNSTY_"+idx);   // 구분                    if ( data.PNSTY.equals("") || data.PNSTY.equals(" ") ) {                        continue;                    }                    data.PERNR         = user.empNo;   // 사원 번호                    data.WORK_YEAR = targetYear;                    data.SUBTY        = box.get("SUBTY_"+idx);   // 유형                    data.FINCO        = box.get("FINCO_"+idx);   // 금융기관코드                    data.INSNM        = box.get("INSNM_"+idx);   // 금융사명                    data.RCBEG        = box.get("RCBEG_"+idx);   // 가입일 @2015 연말정산 추가                    data.ACCNO       = box.get("ACCNO_"+idx);   // 계좌번호                    data.NAM01       = box.get("NAM01_"+idx);   //    금액                    data.PREIN         = box.get("PREIN_"+idx);   // 종전근무지                    data.REQ_H         = box.get("REQ_H_"+idx); // 세대주필수체크                    data.PREIN_FLAG      = box.get("PREIN_FLAG_"+idx);   //종(전)근무지필수 체크                    data.FINCO_FLAG     = box.get("FINCO_FLAG_"+idx);   // 금융기관코드필수 체크                    data.ACCNO_FLAG    = box.get("ACCNO_FLAG_"+idx);   //계좌번호필수 체크                    data.OMIT_FLAG    = box.get("OMIT_FLAG"+idx); //삭제 플래그                    data.PDF_FLAG    = box.get("PDF_FLAG"+idx); //PDF 플래그                    pension_vt.addElement(data);                    //ApLog                    if(i==0){                    	val = new String[16];	                    val[0] = data.PNSTY;	                    val[1] = data.PERNR;	                    val[2] = data.WORK_YEAR;	                    val[3] = data.SUBTY;	                    val[4] = data.FINCO;	                    val[5] = data.INSNM;	                    val[6] = data.ACCNO;	                    val[7] = data.NAM01;	                    val[8] = data.PREIN;	                    val[9] = data.REQ_H;	                    val[10] = data.PREIN_FLAG;	                    val[11] = data.FINCO_FLAG;	                    val[12] = data.ACCNO_FLAG;	                    val[13] = data.OMIT_FLAG;	                    val[14] = data.PDF_FLAG;	                    val[15] = data.RCBEG; //@2015 연말정산 추가                    }                }                String FSTID     = box.get("FSTID")      ;    //세대주체크여부                rfcHS.build(user.empNo,targetYear,targetYear+"0101",targetYear+"1231",FSTID);                rfc.change( user.empNo, targetYear, pension_vt );                String msg = "msg002";                String url = "location.href = '" + WebUtil.ServletURL+"hris.D.D11TaxAdjust.D11TaxAdjustPensionSV?targetYear="+targetYear+"';";                req.setAttribute("msg", msg);                req.setAttribute("url", url);                dest = WebUtil.JspURL+"common/msg.jsp";                //ApLog                ctrl = "11";                cnt = String.valueOf(pension_vt.size());            } else if(jobid.equals("AddorDel")){                int    pension_count = box.getInt("pension_count");                String curr_job   = box.getString("curr_job");                String rowCount   = box.getString("rowCount");      //@v1.2                //2002.12.04. 연말정산 확정여부 조회                o_flag = rfc_o.getO_FLAG( user.empNo, targetYear );                for( int i = 0 ; i < pension_count ; i++ ) {                	D11TaxAdjustPensionData data = new D11TaxAdjustPensionData();                    String idx = Integer.toString(i);                    data.PNSTY        = box.get("PNSTY_"+idx);   // 구분                    if ( data.PNSTY.equals("") || data.PNSTY.equals(" ") ) {                        continue;                    }                    if( box.get("use_flag"+idx).equals("N") ) continue; //                    data.PERNR         = user.empNo;   // 사원 번호                    data.WORK_YEAR = targetYear;                    data.SUBTY        = box.get("SUBTY_"+idx);   // 유형                    data.FINCO        = box.get("FINCO_"+idx);   // 금융기관코드                    data.INSNM        = box.get("INSNM_"+idx);   // 금융사명                    data.RCBEG        = box.get("RCBEG_"+idx);   // 가입일 @2015 연말정산 추가                    data.ACCNO       = box.get("ACCNO_"+idx);   // 계좌번호                    data.NAM01       = box.get("NAM01_"+idx);   //    금액                    data.PREIN         = box.get("PREIN_"+idx);   // 종전근무지                    data.REQ_H         = box.get("REQ_H_"+idx);   // 세대주필수체크                    data.PREIN_FLAG      = box.get("PREIN_FLAG_"+idx);   //종(전)근무지필수 체크                    data.FINCO_FLAG     = box.get("FINCO_FLAG_"+idx);   // 금융기관코드필수 체크                    data.ACCNO_FLAG    = box.get("ACCNO_FLAG_"+idx);   //계좌번호필수 체크                    data.OMIT_FLAG    = box.get("OMIT_FLAG"+idx); //삭제 플래그                    data.PDF_FLAG    = box.get("PDF_FLAG"+idx); //PDF 플래그                    pension_vt.addElement(data);                }                req.setAttribute( "targetYear", targetYear );                req.setAttribute( "pension_vt"   , pension_vt    );                req.setAttribute( "o_flag"    , o_flag     );                req.setAttribute( "rowCount"  , rowCount   );                if ( curr_job.equals("build") ) {    // 입력화면                    dest = WebUtil.JspURL+"D/D11TaxAdjust/D11TaxAdjustPensionBuild.jsp";                } else {                             // 입력                    dest = WebUtil.JspURL+"D/D11TaxAdjust/D11TaxAdjustPensionChange.jsp";                }            } else {                throw new BusinessException(g.getMessage("MSG.COMMON.0016"));            }            Logger.debug.println(this, " destributed = " + dest);            //ApLog 생성            if(jobid.equals("first")||jobid.equals("build")||jobid.equals("change_first")||jobid.equals("change")){            	ApLoggerWriter.writeApLog("연말정산", "연금/저축공제", "D11TaxAdjustPensionSV", "연금/저축공제", ctrl, cnt, val, user, req.getRemoteAddr());            }            printJspPage(req, res, dest);        } catch(Exception e) {            throw new GeneralException(e);        }	}}